<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">
  <channel>
    <title>RubyFlow</title>
    <link>http://www.rubyflow.com/</link>
    <description>Ruby Links</description>
    <language>en-us</language>
    <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/Rubyflow" /><feedburner:info uri="rubyflow" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><item>
      <title>Guarding with arrays</title>
      <description>&lt;a href="http://reefpoints.dockyard.com/2014/05/03/guarding-with-arrays.html"&gt;A simple code pattern to help clean up your code&lt;/a&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=Qu6GVDvNKAw:TsiMBApA5eQ:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=Qu6GVDvNKAw:TsiMBApA5eQ:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/Qu6GVDvNKAw" height="1" width="1"/&gt;</description>
      <pubDate>Sat, 03 May 2014 15:55:24 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/Qu6GVDvNKAw/10975-guarding-with-arrays</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10975-guarding-with-arrays</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10975-guarding-with-arrays</feedburner:origLink></item>
    <item>
      <title>Lita 3.2 released, with new extension plugins</title>
      <description>&lt;a href="https://github.com/jimmycuadra/lita/releases/tag/v3.2.0"&gt;Version 3.2&lt;/a&gt; of &lt;a href="https://www.lita.io/"&gt;Lita&lt;/a&gt;, the programmable Ruby chat bot, has been released. There are several additions in this new version, most notably a new type of plugin, extensions, which can hook into Lita's core to provide new features for other plugins.&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=dYi8sbTEgC4:7gJeCTNyVU4:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=dYi8sbTEgC4:7gJeCTNyVU4:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/dYi8sbTEgC4" height="1" width="1"/&gt;</description>
      <pubDate>Sat, 03 May 2014 12:50:33 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/dYi8sbTEgC4/10974-lita-3-2-released-with-new-extension-plugins</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10974-lita-3-2-released-with-new-extension-plugins</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10974-lita-3-2-released-with-new-extension-plugins</feedburner:origLink></item>
    <item>
      <title>Gourmet Service Objects</title>
      <description>I just wrote a blog post about &lt;a href="http://brewhouse.io/blog/2014/04/30/gourmet-service-objects.html"&gt;Gourmet Service Object&lt;/a&gt;. Service Objects contains the business logic of your Rails app while keeping your controllers and models really thin. I've been using this pattern™ for about 3 years now, it helps me deliver clean, expressive and reusable code that's easy to test.&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=00DhAXQ-fuw:Hb0wiNE35r8:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=00DhAXQ-fuw:Hb0wiNE35r8:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/00DhAXQ-fuw" height="1" width="1"/&gt;</description>
      <pubDate>Thu, 01 May 2014 19:02:22 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/00DhAXQ-fuw/10967-gourmet-service-objects</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10967-gourmet-service-objects</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10967-gourmet-service-objects</feedburner:origLink></item>
    <item>
      <title>Configuring RSpec</title>
      <description>After writing an &lt;a href="http://railsapps.github.io/rspec.html"&gt;RSpec Tutorial&lt;/a&gt;, I released the &lt;a href="http://blog.railsapps.org/post/84339605200/railsapps-testing-gem"&gt;RailsApps Testing gem&lt;/a&gt; which sets up the testing framework by tweaking a few configuration files for popular gems.&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=t_YQOlfLbpg:c4NoGs5UBg0:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=t_YQOlfLbpg:c4NoGs5UBg0:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/t_YQOlfLbpg" height="1" width="1"/&gt;</description>
      <pubDate>Wed, 30 Apr 2014 23:56:33 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/t_YQOlfLbpg/10965-configuring-rspec</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10965-configuring-rspec</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10965-configuring-rspec</feedburner:origLink></item>
    <item>
      <title>7 Screencasts on advanced Rake usage</title>
      <description>I just published a blog post with my &lt;a href="http://devblog.avdi.org/2014/04/30/learn-advanced-rake-in-7-episodes/"&gt;7-episode series on advanced Rake features&lt;/a&gt; all in once place.&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=SdFJ3PfVTtM:4zGrepqD4bA:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=SdFJ3PfVTtM:4zGrepqD4bA:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/SdFJ3PfVTtM" height="1" width="1"/&gt;</description>
      <pubDate>Wed, 30 Apr 2014 19:01:25 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/SdFJ3PfVTtM/10962-7-screencasts-on-advanced-rake-usage</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10962-7-screencasts-on-advanced-rake-usage</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10962-7-screencasts-on-advanced-rake-usage</feedburner:origLink></item>
    <item>
      <title>After RailsConf: Should I Still Learn TDD?</title>
      <description>I’ve written a lot about TDD. So, it’s no surprise that when I published my last article at almost &lt;b&gt;the exact minute&lt;/b&gt; David Heinemeier Hansson mentioned TDD during his RailsConf keynote, I got some questions: &lt;i&gt;&lt;a href="http://www.justinweiss.com/blog/2014/04/28/post-railsconf-should-i-still-learn-tdd/"&gt;Do you agree with DHH’s opinions on TDD? Do you still recommend TDD? If not, what should I do instead?&lt;/a&gt;&lt;/i&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=fLowpeudZJs:s10xCT-YVwU:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=fLowpeudZJs:s10xCT-YVwU:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/fLowpeudZJs" height="1" width="1"/&gt;</description>
      <pubDate>Tue, 29 Apr 2014 17:37:38 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/fLowpeudZJs/10959-after-railsconf-should-i-still-learn-tdd</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10959-after-railsconf-should-i-still-learn-tdd</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10959-after-railsconf-should-i-still-learn-tdd</feedburner:origLink></item>
    <item>
      <title>Add to a Mailchimp list using Gibbon in Ruby</title>
      <description>I love Mailchimp and has recently started loving Gibbon too. I use it to &lt;a href="http://www.millwoodonline.co.uk/blog/mailchimp-list-gibbon-ruby"&gt;add people to my Mailchimp lists&lt;/a&gt;.&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=EVvLMB2jZ98:I1j_QRBwlOo:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=EVvLMB2jZ98:I1j_QRBwlOo:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/EVvLMB2jZ98" height="1" width="1"/&gt;</description>
      <pubDate>Tue, 29 Apr 2014 16:47:20 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/EVvLMB2jZ98/10958-add-to-a-mailchimp-list-using-gibbon-in-ruby</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10958-add-to-a-mailchimp-list-using-gibbon-in-ruby</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10958-add-to-a-mailchimp-list-using-gibbon-in-ruby</feedburner:origLink></item>
    <item>
      <title>FiniteMachine 0.5.0 release!</title>
      <description>The &lt;a href="https://github.com/peter-murach/finite_machine"&gt;finite_machine&lt;/a&gt; gem has received more updates including asynchronous callbacks. Please check it out!&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=toYsU4IZK0o:0jKLbcJvEcI:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=toYsU4IZK0o:0jKLbcJvEcI:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/toYsU4IZK0o" height="1" width="1"/&gt;</description>
      <pubDate>Tue, 29 Apr 2014 00:16:42 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/toYsU4IZK0o/10954-finitemachine-0-5-0-release</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10954-finitemachine-0-5-0-release</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10954-finitemachine-0-5-0-release</feedburner:origLink></item>
    <item>
      <title>eurucamp Early Bird tickets available today!</title>
      <description>eurucamp Early Bird tickets will go on sale at 6pm CEST at &lt;a href="http://tickets.eurucamp.org"&gt;tickets.eurucamp.org&lt;/a&gt; (that's 12noon EDT, 9am PDT if you're in the U.S.). See &lt;a href="http://blog.eurucamp.org/2014/04/28/ticket-sales-begin"&gt;our blog article&lt;/a&gt; for prices and all the details.&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=EIP0DISmuNM:fN_aotE99rU:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=EIP0DISmuNM:fN_aotE99rU:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/EIP0DISmuNM" height="1" width="1"/&gt;</description>
      <pubDate>Mon, 28 Apr 2014 14:32:17 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/EIP0DISmuNM/10952-eurucamp-early-bird-tickets-available-today</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10952-eurucamp-early-bird-tickets-available-today</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10952-eurucamp-early-bird-tickets-available-today</feedburner:origLink></item>
    <item>
      <title>Developing your MVP (Minimum Viable Product)</title>
      <description>At &lt;a href="http://www.millwoodonline.co.uk"&gt;Millwood Online&lt;/a&gt; we seem to have accidentally fallen into specialising in building MVPs for startups. I've blogged about some thoughts about &lt;a href="http://www.millwoodonline.co.uk/blog/developing-mvp-minimum-viable-product)"&gt;developing the MVP&lt;/a&gt;.&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/Rubyflow?a=s85sf-O549A:rDElVaK4ccI:3H-1DwQop_U"&gt;&lt;img src="http://feeds.feedburner.com/~ff/Rubyflow?i=s85sf-O549A:rDElVaK4ccI:3H-1DwQop_U" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Rubyflow/~4/s85sf-O549A" height="1" width="1"/&gt;</description>
      <pubDate>Mon, 28 Apr 2014 12:56:33 +0200</pubDate>
      <link>http://feedproxy.google.com/~r/Rubyflow/~3/s85sf-O549A/10951-developing-your-mvp-minimum-viable-product</link>
      <guid isPermaLink="false">http://www.rubyflow.com/items/10951-developing-your-mvp-minimum-viable-product</guid>
    <feedburner:origLink>http://www.rubyflow.com/items/10951-developing-your-mvp-minimum-viable-product</feedburner:origLink></item>
  </channel>
</rss>
